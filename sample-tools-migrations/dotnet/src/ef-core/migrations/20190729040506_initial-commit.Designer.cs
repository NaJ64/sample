// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sample.Tools.Migrations.EFCore;

namespace Sample.Tools.Migrations.src.efcore.migrations
{
    [DbContext(typeof(SampleMigrationsDbContext))]
    [Migration("20190729040506_initial-commit")]
    partial class initialcommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Sample.Domain.Aggregates.Parent.Child", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description");

                    b.Property<int>("ParentId")
                        .HasColumnName("parentid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("child","sample");
                });

            modelBuilder.Entity("Sample.Domain.Aggregates.Parent.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("parent","sample");
                });

            modelBuilder.Entity("Sample.Domain.Aggregates.Parent.Child", b =>
                {
                    b.HasOne("Sample.Domain.Aggregates.Parent.Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
